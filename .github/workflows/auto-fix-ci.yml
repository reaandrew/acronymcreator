name: Auto-Fix CI Failures

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  notify-claude:
    name: Notify Claude GitHub Agent
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' && (github.event.workflow_run.event == 'pull_request' || github.event.workflow_run.event == 'workflow_dispatch') }}

    steps:
    - name: Get PR details from workflow run
      id: get-pr
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RUN_ID="${{ github.event.workflow_run.id }}"

        # Get PR number and branch from the workflow run object
        PR_DATA=$(gh api /repos/${{ github.repository }}/actions/runs/$RUN_ID --jq '{number: .pull_requests[0].number, branch: .head_branch}')
        PR_NUMBER=$(echo "$PR_DATA" | jq -r '.number')
        PR_BRANCH=$(echo "$PR_DATA" | jq -r '.branch')

        # Validate we got valid data
        if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
          echo "Error: Could not find PR for workflow run $RUN_ID"
          exit 1
        fi

        echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        echo "pr_branch=$PR_BRANCH" >> $GITHUB_OUTPUT
        echo "Found PR #$PR_NUMBER on branch $PR_BRANCH"

    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.get-pr.outputs.pr_branch }}
        fetch-depth: 0

    - name: Invoke Claude to fix CI failure
      uses: anthropics/claude-code-action@v1
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        additional_permissions: "Bash,WebFetch,Edit,Write,Read,Glob,Grep"
        allowed_files: "src/**/*,tests/**/*,.github/**/*,*.py,*.yml,*.yaml,*.md,*.txt,*.json,*.toml,*.ini,*.cfg"
        prompt: |
          CI workflow failed for PR #${{ steps.get-pr.outputs.pr_number }}.

          Branch: ${{ steps.get-pr.outputs.pr_branch }}
          Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}

          Follow this workflow:

          1. ANALYZE FAILURE
             - Read .claude/agents/ci-failure-analyzer.md
             - Follow its instructions to analyze the CI failure
             - Identify root cause with confidence level
             - Understand blast radius and error category

          2. FIX THE ISSUE
             - Based on your analysis, fix the identified problem
             - Edit the problematic file(s)
             - Apply the minimum necessary changes

          3. VALIDATE FIXES
             - Read .claude/agents/precommit-validator.md
             - Follow its instructions to validate your fixes
             - Run all pre-commit hooks
             - Auto-stage any files modified by hooks
             - Ensure all hooks pass before proceeding

          4. COMMIT AND PUSH (only if validation passes)
             - Commit the fix with a conventional commit message
             - Push to ${{ steps.get-pr.outputs.pr_branch }}

          5. TRIGGER CI (ABSOLUTE LAST STEP)
             - Run: gh workflow run ci.yml --ref ${{ steps.get-pr.outputs.pr_branch }}
             - This must be the final action after everything is complete

          CRITICAL RULES:
          - Steps must be executed in order
          - Do NOT skip validation (step 3)
          - Do NOT commit if pre-commit hooks fail
          - Do NOT trigger CI until after pushing
          - Commits from GitHub Actions don't auto-trigger workflows
